name: CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TF_VAR_list_lambdas: ""
      TF_DIR: "iac/projects"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
    
      - name: Release
        id: build_package
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        uses: ridedott/release-me-action@v3.5.53
        with:
          release-branches: '["main", "master"]'
          config-file: .releaserc.yml

      - name: Setup Terragrunt
        # if: steps.build_package.outputs.released == 'true'
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.34.0

      - uses: actions/setup-python@v2
        # if: steps.build_package.outputs.released == 'true'
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        
      - name: Install Shyaml 
        # if: steps.build_package.outputs.released == 'true'
        run: |
          pip install shyaml

      - name: Get Functions
        # if: steps.build_package.outputs.released == 'true'
        run: |
          export TEST=$(cat template.yaml | shyaml keys Resources |  while read -r -d $'\n'  value; do echo "\"$value\","; done)
          export TF_VAR_list_lambdas=$(echo "[$(echo ${TEST%?} | tr -d '\n' )]" | tr "[:upper:]" "[:lower:]")  
          echo $TF_VAR_list_lambdas
          echo TF_VAR_list_lambdas=$(echo $TF_VAR_list_lambdas) >>$GITHUB_ENV

      - name: Check Functions
        # if: steps.build_package.outputs.released == 'true'
        run: |
          echo '${{ env.TF_VAR_list_lambdas }}'

      - name: Configure AWS credentials
        # if: steps.build_package.outputs.released == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terragrunt Plan
        # if: steps.build_package.outputs.released == 'true'
        working-directory: ${{ env.TF_DIR }}
        run: terragrunt plan

      - name: Terragrunt Apply
        # if: steps.build_package.outputs.released == 'true'
        working-directory: ${{ env.TF_DIR }}
        run: terragrunt apply -auto-approve
